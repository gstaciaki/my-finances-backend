name: Continuos Integration

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: myfinances_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL_TEST: postgresql://postgres:wrong@db:5432/myfinances_test
      NODE_ENV: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env
        run: cp .env.example .env

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Generate Prisma Client
        run: yarn prisma generate

      - name: Mostrar logs do Postgres
        run: docker logs ${{ job.services.db.id }}

      - name: Test DNS resolution to db
        run: nslookup db

      - name: Reset test database
        run: yarn ts-node scripts/reset-test-db.ts

      - name: Run tests
        run: yarn jest --runInBand

  code-quality:
    name: Run ESLint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env
        run: cp .env.example .env

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run ESLint
        run: yarn lint
